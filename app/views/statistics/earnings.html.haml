.row
  - per_month = 0
  - wanted_all = 0
  - slo_gross_minimum_salary = 0
  - slo_gross_average_salary = 0
  - usa_developer_minimum_salary = 0
  - usa_developer_average_salary = 0
  - @dates_array.each do |date|
    - date_shorter = date.strftime("%m-%Y")
    - monthly_earnings = @monthly_earnings[date_shorter]

    .col-md-2{:style => "border: 1px solid; height: 70px;"}
      %b= date_shorter
      %br
      - if !monthly_earnings.blank?
        - wanted_net = @all_users.count * WantedSalary.wanted_salary_for_date(date).first.net
        - wanted_all = wanted_all + wanted_net
        - min_query = MinimumSalary.for_year_and_country(date.strftime("%Y"), "SI").first
        - if min_query
          - min_query = min_query.gross
        - else
          - min_query = 0
        - slo_gross_minimum_salary = slo_gross_minimum_salary + (min_query * 3)

        - avg_query = AverageSalary.for_year_and_country(date.strftime("%Y"), "SI").first
        - if avg_query
          - avg_query = avg_query.gross
        - else
          - avg_query = 0
        - slo_gross_average_salary = slo_gross_average_salary + (avg_query * 3)

        - min_usa_query = MinimumSalary.for_year_and_country(date.strftime("%Y"), "US").first
        - if min_usa_query
          - min_usa_query = min_usa_query.gross
        - else
          - min_usa_query = 0
        - usa_developer_minimum_salary = usa_developer_minimum_salary + (min_usa_query * 3)

        - avg_usa_query = AverageSalary.for_year_and_country(date.strftime("%Y"), "US").first
        - if avg_usa_query
          - avg_usa_query = avg_usa_query.gross
        - else
          - avg_usa_query = 0
        - usa_developer_average_salary = usa_developer_average_salary + (avg_usa_query * 3)

        - if monthly_earnings < wanted_net
          %font{:style => "color: #FF9933;"}= "#{monthly_earnings} EUR , w: #{wanted_net} EUR "
          %br
          %font{:style => "color: #CC3333;"}="d:#{wanted_net-monthly_earnings}"
        - else
          %font{:style => "color: green;"}= "#{monthly_earnings} EUR"
        - per_month = per_month + monthly_earnings
      - else
        %font{:style => "color: red;"}= "0 EUR"
  %div{:style => "clear:left;"}
    = "Average per month:"
    %b=" #{(per_month / @dates_array.count).round(2)} EUR"
    %br
    = "Average per person:"
    %b=" #{(per_month / @dates_array.count / @all_users.count).round(2)} EUR"
    %br
    = "All per month:"
    %b=" #{per_month.round(2)} EUR"
    %br
    = "Wanted per month:"
    %b=" #{wanted_all.round(2)} EUR"
    =", difference between wanted and earned"
    %b="#{(wanted_all - per_month).round(2)} EUR"
    %br
    = "If we were working for a minimum slo gross pay we would have earned"
    %b="#{slo_gross_minimum_salary} EUR"
    %br
    = "If we were working for a average slo gross pay we would have earned"
    %b="#{slo_gross_average_salary} EUR"
    %br
    = "If we were working for a minimum usa gross pay we would have earned"
    %b="#{usa_developer_minimum_salary} EUR"
    %br
    = "If we were working for a average usa gross pay we would have earned"
    %b="#{usa_developer_average_salary} EUR"
.row
  - per_year = 0
  - @yearly_earnings.keys.each do |key|
    - per_year = per_year + @yearly_earnings[key]
    .col-md-2{:style => "border: 1px solid;"}
      %b= key
      %br
      = "#{@yearly_earnings[key]} EUR"
  %div{:style => "clear:left;"}
    = "Average per year:"
    %b=" #{(per_year / @yearly_earnings.keys.count).round(2)} EUR"

.row
  - per_company = 0
  - @company_earnings.keys.each do |key|
    .col-md-2{:style => "border: 1px solid;"}
      - per_company = per_company + @company_earnings[key]
      %b= OurCompany.find(key).name
      %br
      = "#{@company_earnings[key]} EUR"
  %div{:style => "clear:left;"}
    = "Average per company:"
    %b=" #{(per_company / @company_earnings.keys.count).round(2)} EUR"

