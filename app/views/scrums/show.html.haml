- today_date = Date.today
- start_date = Date.new(today_date.year, today_date.month , 1)
- end_date = Date.new(today_date.year, today_date.month, today_date.day)
- days_counter = 0
.row
  - (start_date..end_date).each do |day|
    .col-md-2{:style => "height: 100px; border: 1px solid;"}
      %b= "#{day} #{day.strftime('%A').downcase}"
      %br
      - if @daily_user_work[day]
        - days_counter = days_counter + 1
        - @daily_user_work[day].keys.each do |key2|
          - time_working = @daily_user_work[day][key2]/60
          = "#{key2[0,1]} -> #{time_working} h"
          %br
        - (@all_users.to_a - @daily_user_work[day].keys).each do |email|

          - if Vacation.for_user_at_date(email, day).count > 0
            %font{:style => "color: green;"}= "#{email[0,1]} -> On vacation"
          - else
            %font{:style => "color: red;"}= "#{email[0,1]} -> "
            = link_to "Add vacation", new_m3_table_admin_vacation_path, {:style => "color: red;"}
          %br
      - else
        - if "sunday" == day.strftime('%A').downcase || "saturday" == day.strftime('%A').downcase
          = "Weekend"
        - else
          = "Why no one worked?"
          - days_counter = days_counter + 1


%br
= "Number of working days: #{days_counter} and hours #{days_counter*8}"
%br
- @user_statistics.keys.each do |key|
  - total_planed = @user_statistics[key]['total_planed']/60
  - total_worked = @user_statistics[key]['total_used']/60

  - explanation = ""
  - if total_worked > days_counter*8
    - explanation = "#{total_worked-days_counter*8} hours more than normal working time"
  - elsif total_worked < days_counter*8
    - explanation = "#{days_counter*8-total_worked} hours less than normal working time"
  - else
    - explanation = "a normal 8 hours working time :D"
  = "#{key} has planned to work: #{total_planed} hours and worked for: #{total_worked} hours, which is #{explanation}"
  %br
/ - if @daily_user_work
/   %div
/     - @daily_user_work.keys.each do |key|
/       %b= "#{key} #{key.strftime('%A').downcase}"
/       %br
/       - @daily_user_work[key].keys.each do |key2|
/         - time_working = @daily_user_work[key][key2]/60
/         - if time_working <= 8 && time_working >= 4
/           %font{:style => "color: blue;"}= "#{key2} worked #{time_working} you should get half a vacation day"
/         - elsif time_working < 4 && time_working >= 0
/           %font{:style => "color: red;"}= "#{key2} worked #{time_working} you should get a vacation day"
/         - else
/           = "#{key2} worked #{time_working}"
/         %br
/       - (@all_users.to_a - @daily_user_work[key].keys).each do |email|
/         %font{:style => "color: red;"}= "#{email} did not work at all. Get a vacation day!"
/         %br

- if @task_statistic
  %br
  .row
    - @task_statistic.keys.each do |key|
      .col-md-2{:style => "height: 100px; border: 1px solid;"}
        %b= key
        %br
        = "All: #{@task_statistic[key]['count']/60} hours"
        %br
        - @task_statistic[key].keys.each do |key2|
          - if "count" != key2
            = "#{key2[0,1]} -> P: #{@task_statistic[key][key2]['planed']/60} h / W: #{@task_statistic[key][key2]['used']/60} h"
            %br
  / %div
  /   - @task_statistic.keys.each do |key|
  /     %div{:style => "float:left; margin-right: 10px;"}
  /       %h4= key
  /       = "All hours on project: #{@task_statistic[key]['count']/60} hours"
  /       - @task_statistic[key].keys.each do |key2|
  /         - if "count" != key2
  /           %br
  /           = "#{key2} planed: #{@task_statistic[key][key2]['planed']/60} hours ... worked: #{@task_statistic[key][key2]['used']/60} hours"
  / %div{:style => "clear:both; margin-top: 20px;"}
  /   %h2="User statistics"
  /   - @user_statistics.keys.each do |key|
  /     %div
  /       = "#{key} has planned: #{@user_statistics[key]['total_planed']/60} hours and worked for: #{@user_statistics[key]['total_used']/60} hours"

%div{:style => "clear:both; margin-top: 20px;"}
  = @scrum.date
  %br
  = @scrum.finished_at
  %br
  - @scrum.scrum_tasks.order("user_id ASC").each do |scrum_task|
    .col-md-4
      .thumbnail
        - if scrum_task.user
          = scrum_task.user.email
          %br
        - if scrum_task.project
          = scrum_task.project.name
          %br
        = scrum_task.description
        %br
        = "#{scrum_task.hours_planned} h #{scrum_task.minutes_planned} min"
        %br
        = "#{scrum_task.hours_used} h #{scrum_task.minutes_used} min"
        %br
        - if !scrum_task.not_finished_or_overtime_justification.blank?
          = scrum_task.not_finished_or_overtime_justification
          %br
        = link_to "Edit", edit_task_scrums_path(:id => scrum_task.id)


  = link_to "New scrum", new_scrum_path
  = link_to "Edit scrum", edit_scrum_path(@scrum.id)
